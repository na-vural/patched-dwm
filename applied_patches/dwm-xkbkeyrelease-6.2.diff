diff --git a/config.def.h b/config.def.h
index 1c0b587..c7c5825 100644
--- a/config.def.h
+++ b/config.def.h
@@ -46,10 +46,10 @@ static const Layout layouts[] = {
 /* key definitions */
 #define MODKEY Mod1Mask
 #define TAGKEYS(KEY,TAG) \
-	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
-	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
-	{ MODKEY|ShiftMask,             KEY,      tag,            {.ui = 1 << TAG} }, \
-	{ MODKEY|ControlMask|ShiftMask, KEY,      toggletag,      {.ui = 1 << TAG} },
+	{ KeyPress,    MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
+	{ KeyPress,    MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
+	{ KeyPress,    MODKEY|ShiftMask,             KEY,      tag,            {.ui = 1 << TAG} }, \
+	{ KeyPress,    MODKEY|ControlMask|ShiftMask, KEY,      toggletag,      {.ui = 1 << TAG} },
 
 /* helper for spawning shell commands in the pre dwm-5.0 fashion */
 #define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
@@ -60,30 +60,30 @@ static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont,
 static const char *termcmd[]  = { "st", NULL };
 
 static Key keys[] = {
-	/* modifier                     key        function        argument */
-	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
-	{ MODKEY,                       XK_b,      togglebar,      {0} },
-	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
-	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
-	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
-	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
-	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
-	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
-	{ MODKEY,                       XK_Return, zoom,           {0} },
-	{ MODKEY,                       XK_Tab,    view,           {0} },
-	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
-	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
-	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
-	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
-	{ MODKEY,                       XK_space,  setlayout,      {0} },
-	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
-	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
-	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
-	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
-	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
-	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
-	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
+	/*press/release,    modifier                     key        function        argument */
+	{ KeyPress,    MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
+	{ KeyPress,    MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
+	{ KeyPress,    MODKEY,                       XK_b,      togglebar,      {0} },
+	{ KeyPress,    MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
+	{ KeyPress,    MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
+	{ KeyPress,    MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
+	{ KeyPress,    MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
+	{ KeyPress,    MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
+	{ KeyPress,    MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
+	{ KeyPress,    MODKEY,                       XK_Return, zoom,           {0} },
+	{ KeyPress,    MODKEY,                       XK_Tab,    view,           {0} },
+	{ KeyPress,    MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
+	{ KeyPress,    MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
+	{ KeyPress,    MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
+	{ KeyPress,    MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
+	{ KeyPress,    MODKEY,                       XK_space,  setlayout,      {0} },
+	{ KeyPress,    MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
+	{ KeyPress,    MODKEY,                       XK_0,      view,           {.ui = ~0 } },
+	{ KeyPress,    MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
+	{ KeyPress,    MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
+	{ KeyPress,    MODKEY,                       XK_period, focusmon,       {.i = +1 } },
+	{ KeyPress,    MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
+	{ KeyPress,    MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
 	TAGKEYS(                        XK_1,                      0)
 	TAGKEYS(                        XK_2,                      1)
 	TAGKEYS(                        XK_3,                      2)
@@ -93,7 +93,7 @@ static Key keys[] = {
 	TAGKEYS(                        XK_7,                      6)
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
-	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+	{ KeyPress,    MODKEY|ShiftMask,             XK_q,      quit,           {0} },
 };
 
 /* button definitions */
diff --git a/dwm.c b/dwm.c
index b0b3466..4fcc233 100644
--- a/dwm.c
+++ b/dwm.c
@@ -40,6 +40,7 @@
 #include <X11/extensions/Xinerama.h>
 #endif /* XINERAMA */
 #include <X11/Xft/Xft.h>
+#include <X11/XKBlib.h>
 
 #include "drw.h"
 #include "util.h"
@@ -100,6 +101,7 @@ struct Client {
 };
 
 typedef struct {
+	int type;
 	unsigned int mod;
 	KeySym keysym;
 	void (*func)(const Arg *);
@@ -254,6 +256,7 @@ static void (*handler[LASTEvent]) (XEvent *) = {
 	[Expose] = expose,
 	[FocusIn] = focusin,
 	[KeyPress] = keypress,
+	[KeyRelease] = keypress,
 	[MappingNotify] = mappingnotify,
 	[MapRequest] = maprequest,
 	[MotionNotify] = motionnotify,
@@ -994,6 +997,7 @@ keypress(XEvent *e)
 	keysym = XKeycodeToKeysym(dpy, (KeyCode)ev->keycode, 0);
 	for (i = 0; i < LENGTH(keys); i++)
 		if (keysym == keys[i].keysym
+		&& ev->type == keys[i].type
 		&& CLEANMASK(keys[i].mod) == CLEANMASK(ev->state)
 		&& keys[i].func)
 			keys[i].func(&(keys[i].arg));
@@ -1593,6 +1597,7 @@ setup(void)
 		|LeaveWindowMask|StructureNotifyMask|PropertyChangeMask;
 	XChangeWindowAttributes(dpy, root, CWEventMask|CWCursor, &wa);
 	XSelectInput(dpy, root, wa.event_mask);
+	XkbSetDetectableAutoRepeat(dpy, 1, &i);
 	grabkeys();
 	focus(NULL);
 }
